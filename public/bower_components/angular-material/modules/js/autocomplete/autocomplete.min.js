/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.8.3-master-f086de1
 */
!function(){"use strict";angular.module("material.components.autocomplete",["material.core","material.components.icon"])}(),function(){"use strict";function e(e,t,n,l,a){function o(){c(),a(function(){r(),i()})}function i(){e.autofocus&&w.input.focus()}function c(){var t=parseInt(e.delay,10)||0;e.$watch("searchText",t?n.debounce(m,t):m),e.$watch("selectedItem",function(t,n){t&&(e.searchText=d(t)),e.itemChange&&t!==n&&e.itemChange(p(t))})}function r(){w={main:t[0],ul:t[0].getElementsByTagName("ul")[0],input:t[0].getElementsByTagName("input")[0]}}function m(t,n){if(T.index=h(),(t||t!==n)&&t!==d(e.selectedItem)){if(e.selectedItem=null,!t||t.length<Math.max(parseInt(e.minLength,10),1))return T.loading=!1,T.matches=[],T.hidden=g(),A(),void 0;var l=t.toLowerCase();D&&D.cancel&&(D.cancel(),D=null),!e.noCache&&I[l]?(T.matches=I[l],A()):x(t),T.hidden=g(),e.textChange&&t!==n&&e.textChange(p(e.selectedItem))}}function s(){L||(T.hidden=!0)}function u(e){switch(e.keyCode){case l.KEY_CODE.DOWN_ARROW:if(T.loading)return;e.preventDefault(),T.index=Math.min(T.index+1,T.matches.length-1),v(),b();break;case l.KEY_CODE.UP_ARROW:if(T.loading)return;e.preventDefault(),T.index=Math.max(0,T.index-1),v(),b();break;case l.KEY_CODE.ENTER:if(T.loading||T.index<0)return;e.preventDefault(),$(T.index);break;case l.KEY_CODE.ESCAPE:T.matches=[],T.hidden=!0,T.index=h();break;case l.KEY_CODE.TAB:}}function d(t){return t&&e.itemText?e.itemText(p(t)):t}function p(e){if(e){var t={};return T.itemName&&(t[T.itemName]=e),t}}function h(){return e.autoselect?0:-1}function g(){return 1===T.matches.length&&e.searchText===d(T.matches[0])&&e.selectedItem===T.matches[0]}function f(){return d(T.matches[T.index])}function $(t){e.selectedItem=T.matches[t],e.searchText=d(e.selectedItem)||e.searchText,T.hidden=!0,T.index=0,T.matches=[]}function C(){e.searchText="",$(-1),w.input.focus()}function x(t){function n(n){I[a]=n,t===e.searchText&&(D=null,T.loading=!1,T.matches=n,T.hidden=g(),A())}var l=e.$parent.$eval(E),a=t.toLowerCase();angular.isArray(l)?n(l):(T.loading=!0,l.success&&l.success(n),l.then&&l.then(n),l.error&&l.error(function(){T.loading=!1}))}function A(){if(!T.hidden)switch(T.matches.length){case 0:return T.messages.splice(0);case 1:return T.messages.push({display:"There is 1 match available."});default:return T.messages.push({display:"There are "+T.matches.length+" matches available."})}}function b(){T.messages.push({display:f()})}function v(){var e=41*T.index,t=e+41,n=225.5;e<w.ul.scrollTop?w.ul.scrollTop=e:t>w.ul.scrollTop+n&&(w.ul.scrollTop=t-n)}var T=this,y=e.itemsExpr.split(/ in /i),E=y[1],w=null,D=null,I={},L=!1;return T.scope=e,T.parent=e.$parent,T.itemName=y[0],T.matches=[],T.loading=!1,T.hidden=!0,T.index=null,T.messages=[],T.id=n.nextUid(),T.keydown=u,T.blur=s,T.clear=C,T.select=$,T.getCurrentDisplayValue=f,T.fetch=n.debounce(x),T.listEnter=function(){L=!0},T.listLeave=function(){L=!1},T.mouseUp=function(){w.input.focus()},o()}angular.module("material.components.autocomplete").controller("MdAutocompleteCtrl",e),e.$inject=["$scope","$element","$mdUtil","$mdConstant","$timeout"]}(),function(){"use strict";function e(){function e(e,t,n){angular.forEach(e.$$isolateBindings,function(t,l){t.optional&&angular.isUndefined(e[l])&&(e[l]=n.hasOwnProperty(n.$normalize(t.attrName)))})}return{transclude:!0,controller:"MdAutocompleteCtrl",controllerAs:"$mdAutocompleteCtrl",link:e,scope:{searchText:"=mdSearchText",selectedItem:"=mdSelectedItem",itemsExpr:"@mdItems",itemText:"&mdItemText",placeholder:"@placeholder",noCache:"=?mdNoCache",itemChange:"&mdSelectedItemChange",textChange:"&mdSearchTextChange",isDisabled:"=ngDisabled",minLength:"=mdMinLength",delay:"=mdDelay",autofocus:"=?mdAutofocus",floatingLabel:"@mdFloatingLabel",autoselect:"=?mdAutoselect"},template:'        <md-autocomplete-wrap role="listbox">          <md-input-container ng-if="floatingLabel">            <label>{{floatingLabel}}</label>            <input type="text"                id="fl-input-{{$mdAutocompleteCtrl.id}}"                name="fl-input-{{$mdAutocompleteCtrl.id}}"                autocomplete="off"                ng-disabled="isDisabled"                ng-model="$mdAutocompleteCtrl.scope.searchText"                ng-keydown="$mdAutocompleteCtrl.keydown($event)"                ng-blur="$mdAutocompleteCtrl.blur()"                aria-owns="ul-{{$mdAutocompleteCtrl.id}}"                aria-label="{{floatingLabel}}"                aria-autocomplete="list"                aria-haspopup="true"                aria-activedescendant=""                aria-expanded="{{!$mdAutocompleteCtrl.hidden}}"/>                        </md-input-container>          <input type="text"              id="input-{{$mdAutocompleteCtrl.id}}"              name="input-{{$mdAutocompleteCtrl.id}}"              ng-if="!floatingLabel"              autocomplete="off"              ng-disabled="isDisabled"              ng-model="$mdAutocompleteCtrl.scope.searchText"              ng-keydown="$mdAutocompleteCtrl.keydown($event)"              ng-blur="$mdAutocompleteCtrl.blur()"              placeholder="{{placeholder}}"              aria-owns="ul-{{$mdAutocompleteCtrl.id}}"              aria-label="{{placeholder}}"              aria-autocomplete="list"              aria-haspopup="true"              aria-activedescendant=""              aria-expanded="{{!$mdAutocompleteCtrl.hidden}}"/>          <button              type="button"              ng-if="$mdAutocompleteCtrl.scope.searchText && !isDisabled"              ng-click="$mdAutocompleteCtrl.clear()">            <md-icon md-svg-icon="cancel"></md-icon>            <span class="visually-hidden">Clear</span>          </button>          <md-progress-linear              ng-if="$mdAutocompleteCtrl.loading"              md-mode="indeterminate"></md-progress-linear>          <ul role="presentation"              id="ul-{{$mdAutocompleteCtrl.id}}"              ng-mouseenter="$mdAutocompleteCtrl.listEnter()"              ng-mouseleave="$mdAutocompleteCtrl.listLeave()"              ng-mouseup="$mdAutocompleteCtrl.mouseUp()">            <li ng-repeat="(index, item) in $mdAutocompleteCtrl.matches"                ng-class="{ selected: index === $mdAutocompleteCtrl.index }"                ng-show="$mdAutocompleteCtrl.scope.searchText && !$mdAutocompleteCtrl.hidden"                ng-click="$mdAutocompleteCtrl.select(index)"                ng-transclude                md-autocomplete-list-item="$mdAutocompleteCtrl.itemName">            </li>          </ul>        </md-autocomplete-wrap>        <aria-status            class="visually-hidden"            role="status"            aria-live="assertive">          <p ng-repeat="message in $mdAutocompleteCtrl.messages">{{message.display}}</p>        </aria-status>'}}angular.module("material.components.autocomplete").directive("mdAutocomplete",e)}(),function(){"use strict";function e(e,t,n){function l(e){return e?e.replace(/[\*\[\]\(\)\{\}\\\^\$]/g,"\\$&"):e}var a=t.attr("md-highlight-text"),o=n(t.text())(e),i=e.$watch(a,function(e){var n=new RegExp("^"+l(e),"i"),a=o.replace(n,'<span class="highlight">$&</span>');t.html(a)});t.on("$destroy",function(){i()})}angular.module("material.components.autocomplete").controller("MdHighlightCtrl",e),e.$inject=["$scope","$element","$interpolate"]}(),function(){"use strict";function e(){return{terminal:!0,scope:!1,controller:"MdHighlightCtrl"}}angular.module("material.components.autocomplete").directive("mdHighlightText",e)}(),function(){"use strict";function e(e,t){function n(n,l,a,o){var i=o.parent.$new(!1,o.parent),c=o.scope.$eval(a.mdAutocompleteListItem);i[c]=n.item,e(l.contents())(i),l.attr({role:"option",id:"item_"+t.nextUid()})}return{require:"^?mdAutocomplete",terminal:!0,link:n,scope:!1}}angular.module("material.components.autocomplete").directive("mdAutocompleteListItem",e),e.$inject=["$compile","$mdUtil"]}();